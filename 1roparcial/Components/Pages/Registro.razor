@page "/tardanza"
@inject NavigationManager NavMan
@rendermode InteractiveServer
@using System.Text.Json
@inject IJSRuntime JSx

<h3>Tardanzas recibidas</h3>

<div class="text-end mb-3">
    <button class="btn btn-primary" @onclick="NuevaTardanza">Nueva tardanza</button>
</div>

<table class="table table-striped table-bordered">
    <thead>
        <tr>

            <th>Fecha</th>
            <th>Nombre</th>
            <th>Apellido</th>
            <th>Matricula</th>
            <th>Curso</th>
            <th>Motivo</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var tardanza in tardanzas)
        {
            <tr>
                <td>@tardanza.Fecha</td> 
                <td>@tardanza.Nombre</td>
                <td>@tardanza.Apellido</td>
                <td>@tardanza.Matricula</td>
                <td>@tardanza.Curso</td>
                <td>@tardanza.Motivo</td>
            
                <td>
                    <button @onclick="()=>editarFila(tardanza)" class="btn btn-primary btn-sm">Editar</button>
                    <button @onclick="()=>eliminarFila(tardanza)" class="btn btn-danger btn-sm">Eliminar</button>
                </td>
            </tr>
        }
    </tbody>
</table>

@code{
    
    List<Reporte> tardanzas = new List<Reporte>();


    private void NuevaTardanza()
    {
        NavMan.NavigateTo("tardanza/nuevo");
    }

    private void editarFila(Reporte tardanza)
    {
        NavMan.NavigateTo("tardanza/editar/" + tardanza.Id);
    }

    private async Task eliminarFila(Reporte tardanza)
    {
        var rs = await JSx.InvokeAsync<bool>("confirm", "¿Esta seguro de eliminar el registro?");
        if(rs){    
            tardanzas.Remove(tardanza);
            await JSx.InvokeVoidAsync("localStorage.setItem", "tardanzas", JsonSerializer.Serialize(tardanzas));
            StateHasChanged();
        }
    }

    
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            var tardanzasJson = await JSx.InvokeAsync<string>("localStorage.getItem", "tardanzas");
            if (tardanzasJson != null)
            {
                tardanzas = JsonSerializer.Deserialize<List<Reporte>>(tardanzasJson);
                //JSx.InvokeVoidAsync("alert", tardanzas.Count + " tardanzas cargados");
                StateHasChanged();
            }    
        }
    }

}
